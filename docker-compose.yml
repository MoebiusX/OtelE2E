version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: payment_poc
      POSTGRES_USER: payment_user
      POSTGRES_PASSWORD: payment_pass
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U payment_user -d payment_poc"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Kong Gateway
  kong-gateway:
    build: 
      context: .
      dockerfile: Dockerfile.kong
    ports:
      - "8000:8000"
      - "8001:8001"  # Admin API
    environment:
      - BACKEND_URL=http://payment-api:5000
    depends_on:
      - payment-api
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Payment API Backend
  payment-api:
    build: .
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://payment_user:payment_pass@postgres:5432/payment_poc
      - OTEL_SERVICE_NAME=payment-api
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://jaeger:14268/api/traces
    depends_on:
      postgres:
        condition: service_healthy
      jaeger:
        condition: service_started
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/payments"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Jaeger Tracing Backend
  jaeger:
    image: jaegertracing/all-in-one:latest
    ports:
      - "16686:16686"  # Jaeger UI
      - "14268:14268"  # HTTP collector
      - "14250:14250"  # gRPC collector
    environment:
      - COLLECTOR_OTLP_ENABLED=true
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:16686/"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:

networks:
  default:
    name: payment_poc_network